#!/usr/bin/env python
'''
Script to parse file(s) into memory
'''

import aipromptmaster
import argparse

from dotenv import load_dotenv
from aipromptmaster.logger import configure_logging
from aipromptmaster.config import Config

load_dotenv()




def main() -> None:
    """Main function for the aiprompt script"""
    logger = configure_logging("APM-parse", "apm_parse.log")
    conf = Config()
    
    argparser = argparse.ArgumentParser(
        description="Parses a file or a director into memory. "
        "It shares the default aiprompt .env file."
    )
    
    group = argparser.add_mutually_exclusive_group(required=True)
    group.add_argument("--file", type=str, help="The file to parse.")
    group.add_argument("--dir", type=str, help="The directory to parse.")
    
    argparser.add_argument(
        "-I",
        "--init",
        action="store_true",
        help="Init the shared APM memory and wipe its content (default: False)",
        default=False,
    )
    
    argparser.add_argument(
        "-O",
        "--overlap",
        type=int,
        help="The overlap size between chunks when parsing files (default: 200)",
        default=200,
    )
    
    argparser.add_argument(
        "-M",
        "--max_length",
        type=int,
        help="The max_length of each chunk when parsing files (default: 4000)",
        default=4000,
    )
    
    args = argparser.parse_args()
    
    aipromptmaster.prompt()
    print(conf.fast_llm_model)

if __name__ == "__main__":
    main()